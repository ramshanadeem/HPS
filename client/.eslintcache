[{"E:\\HPS\\client\\src\\index.js":"1","E:\\HPS\\client\\src\\reportWebVitals.js":"2","E:\\HPS\\client\\src\\App.js":"3","E:\\HPS\\client\\src\\components\\list\\List.js":"4","E:\\HPS\\client\\src\\components\\Dialog.js":"5","E:\\HPS\\client\\src\\components\\Stepper.js":"6","E:\\HPS\\client\\src\\components\\register\\Register.js":"7","E:\\HPS\\client\\src\\components\\service\\Service.js":"8","E:\\HPS\\client\\src\\components\\welfare\\Welfare.js":"9"},{"size":517,"mtime":1614790152681,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1614790152697,"results":"12","hashOfConfig":"11"},{"size":216,"mtime":1614790152665,"results":"13","hashOfConfig":"11"},{"size":3798,"mtime":1614790152681,"results":"14","hashOfConfig":"11"},{"size":1587,"mtime":1614790152665,"results":"15","hashOfConfig":"11"},{"size":4398,"mtime":1614790152681,"results":"16","hashOfConfig":"11"},{"size":19009,"mtime":1614794783312,"results":"17","hashOfConfig":"11"},{"size":20840,"mtime":1614790152681,"results":"18","hashOfConfig":"11"},{"size":10017,"mtime":1614790152681,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9uokij",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"E:\\HPS\\client\\src\\index.js",[],["44","45"],"E:\\HPS\\client\\src\\reportWebVitals.js",[],"E:\\HPS\\client\\src\\App.js",["46"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\HPS\\client\\src\\components\\list\\List.js",["47","48","49","50"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MaterialTable from 'material-table'\r\nimport { Dialog } from '@material-ui/core';\r\nimport FormDialog from '../Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst List = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [columns, setColumns] = React.useState([\r\n        { title: 'Adı', field: 'name' },\r\n        { title: 'Soyadı', field: 'surname' },\r\n        { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\r\n        { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\r\n    ]);\r\n    const [data, setData] = React.useState([\r\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 }\r\n    ])\r\n    return (\r\n        <div style={{ maxWidth: '90%', margin: 'auto' }}>\r\n            <FormDialog open={open} onClose={handleClose} />\r\n            <MaterialTable\r\n                title=\"Dummy Data\"\r\n                columns={columns}\r\n                data={data}\r\n                actions={[\r\n                    {\r\n                        icon: AddIcon,\r\n                        tooltip: 'Add',\r\n                        isFreeAction: true,\r\n                        onClick: handleClickOpen,\r\n                    },\r\n                    // {\r\n                    //     icon: AddIcon,\r\n                    //     tooltip: 'Add',\r\n                    //     onClick: handleClickOpen,\r\n                    // }\r\n                ]}\r\n            // editable={{\r\n            // isEditable: rowData => rowData.name === 'a', // only name(a) rows would be editable\r\n            // isEditHidden: rowData => rowData.name === 'x',\r\n            // isDeletable: rowData => rowData.name === 'b', // only name(b) rows would be deletable,\r\n            // isDeleteHidden: rowData => rowData.name === 'y',\r\n            // onBulkUpdate: changes => \r\n            //     new Promise((resolve, reject) => {\r\n            //         setTimeout(() => {\r\n            //             /* setData([...data, newData]); */\r\n\r\n            //             resolve();\r\n            //         }, 1000);\r\n            //     }),\r\n            // onRowAddCancelled: rowData => console.log('Row adding cancelled'),\r\n            // onRowUpdateCancelled: rowData => console.log('Row editing cancelled'),\r\n            // onRowAdd: newData =>\r\n            //     new Promise((resolve, reject) => {\r\n            //         setTimeout(() => {\r\n            //             /* setData([...data, newData]); */\r\n\r\n            //             resolve();\r\n            //         }, 1000);\r\n            //     }),\r\n            // onRowUpdate: (newData, oldData) =>\r\n            //     new Promise((resolve, reject) => {\r\n            //         setTimeout(() => {\r\n            //             const dataUpdate = [...data];\r\n            //             const index = oldData.tableData.id;\r\n            //             dataUpdate[index] = newData;\r\n            //             setData([...dataUpdate]);\r\n\r\n            //             resolve();\r\n            //         }, 1000);\r\n            //     }),\r\n            // onRowDelete: oldData =>\r\n            //     new Promise((resolve, reject) => {\r\n            //         setTimeout(() => {\r\n            //             const dataDelete = [...data];\r\n            //             const index = oldData.tableData.id;\r\n            //             dataDelete.splice(index, 1);\r\n            //             setData([...dataDelete]);\r\n\r\n            //             resolve();\r\n            //         }, 1000);\r\n            //     })\r\n            // }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","E:\\HPS\\client\\src\\components\\Dialog.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HorizontalLinearStepper from './Stepper';\r\n\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slide from '@material-ui/core/Slide';\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FormDialog({ open, onClose }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <HorizontalLinearStepper />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n\r\n  );\r\n}","E:\\HPS\\client\\src\\components\\Stepper.js",[],"E:\\HPS\\client\\src\\components\\register\\Register.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"E:\\HPS\\client\\src\\components\\service\\Service.js",["85","86","87","88","89","90","91","92","93","94","95","96"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst defaultProps = {\r\n  bgcolor: 'background.paper',\r\n  m: 1,\r\n  style: { width: '5rem', height: '5rem' },\r\n  borderColor: 'text.primary',\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction DatePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <DatePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TimePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <TimePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nconst onSubmit = async values => {\r\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function Services() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  /*   const handleChange = (prop) => (event) => {\r\n      setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n   */\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto' }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        🏁 Services\r\n      </Typography>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        initialValues={{ employed: true, stooge: 'larry' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={2}>\r\n                  <TextField\r\n                    id=\"outlined-uncontrolled\"\r\n                    label=\"MR#\"\r\n                    defaultValue=\"0\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"Token No\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Token No\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\" item xs={3}>\r\n\r\n                    <KeyboardDatePicker\r\n                      disableToolbar\r\n                      variant=\"outlined\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-inline\"\r\n\r\n                      label=\"WelfareDate\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n                <Grid item xs={4}>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"></FormLabel>\r\n                    <FormGroup row>\r\n\r\n                      <FormControlLabel\r\n                        label=\"IS PAF EMPLOYEE\"\r\n                        control={\r\n                          <Field\r\n                            name=\"IS PAF EMPLOYEE\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"IS PAF EMPLOYEE\"\r\n                          />\r\n\r\n                        }\r\n                      />\r\n\r\n\r\n                      <FormControlLabel\r\n                        label=\"IS STAFF\"\r\n                        control={\r\n                          <Field\r\n                            name=\"IS STAFF\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"IS STAFF\"\r\n                          />\r\n                        }\r\n                      />\r\n\r\n\r\n\r\n\r\n\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <h4>Contact</h4>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"Profession\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Profession\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"Education\"\r\n                    component={Select}\r\n                    label=\"Education\"\r\n                    variant=\"outlined\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"male\">male</MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      other\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"Fiqa\"\r\n                    component={Select}\r\n                    label=\"Fiqa\"\r\n                    variant=\"outlined\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"male\">male</MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      other\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Cast\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Cast\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <h4>Requester Info</h4>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Requestor Name\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Requestor Name\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ paddingRight: '7%' }}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"Relationship With patients\"\r\n                    component={Select}\r\n                    label=\" Relationship With patients\"\r\n                    variant=\"outlined\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"male\">male</MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      other\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"KidsMale\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"No of a Kid(Male)\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Kidsfemale\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"No of a Kid(Female)\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Requestor phone number\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Requestor phone number\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ paddingRight: '7%' }}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Gardian\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Gardian\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"other Kids\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"other Kids\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"No of brothers\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"No of brothers\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <TextField\r\n                    id=\"outlined-uncontrolled\"\r\n                    label=\"Monthly Income\"\r\n                    defaultValue=\"0\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} style={{ paddingRight: '7%' }}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"other Info\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"other Info\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"No of sisters\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"No of sisters\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Family Member\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Family Member\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n\r\n\r\n\r\n                  <FormControl component=\"fieldset\" >\r\n                    <FormLabel component=\"legend\"></FormLabel>\r\n                    <FormGroup row>\r\n                      <Grid item >\r\n                        <FormControlLabel\r\n                          label=\"IS PAF EMPLOYEE\"\r\n                          control={\r\n                            <Field\r\n                              name=\"IS PAF EMPLOYEE\"\r\n                              component={Checkbox}\r\n                              type=\"checkbox\"\r\n                              value=\"IS PAF EMPLOYEE\"\r\n                            />\r\n\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid >\r\n                        <FormControlLabel\r\n                          label=\"IS STAFF\"\r\n                          control={\r\n                            <Field\r\n                              name=\"IS STAFF\"\r\n                              component={Checkbox}\r\n                              type=\"checkbox\"\r\n                              value=\"IS STAFF\"\r\n                            />\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item >\r\n                        <FormControlLabel\r\n                          label=\"IS STAFF\"\r\n                          control={\r\n                            <Field\r\n                              name=\"IS STAFF\"\r\n                              component={Checkbox}\r\n                              type=\"checkbox\"\r\n                              value=\"IS STAFF\"\r\n                            />\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item >\r\n                        <FormControlLabel\r\n                          label=\"IS STAFF\"\r\n                          control={\r\n                            <Field\r\n                              name=\"IS STAFF\"\r\n                              component={Checkbox}\r\n                              type=\"checkbox\"\r\n                              value=\"IS STAFF\"\r\n                            />\r\n                          }\r\n                        />\r\n\r\n                      </Grid>\r\n\r\n\r\n\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <h4>Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div style={{ display: \"inline\" }}><h4>TABLE BANYGA AB</h4></div>\r\n                </Grid>\r\n                {/*    <Grid item >\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Best Stooge</FormLabel>\r\n                    <RadioGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Larry\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"larry\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Moe\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"moe\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Curly\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"curly\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Sauces</FormLabel>\r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Ketchup\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"ketchup\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Mustard\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"mustard\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Salsa\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"salsa\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Guacamole 🥑\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"guacamole\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"notes\"\r\n                    component={TextField}\r\n                    multiline\r\n                    label=\"Notes\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    component={Select}\r\n                    label=\"Select a City\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"London\">London</MenuItem>\r\n                    <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      A city with a very long Name\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid> */}\r\n\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","E:\\HPS\\client\\src\\components\\welfare\\Welfare.js",["97","98"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction DatePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <DatePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TimePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <TimePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nconst onSubmit = async values => {\r\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function Welfare() {\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto' }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        🏁 Welfare\r\n      </Typography>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        initialValues={{ employed: true, stooge: 'larry' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"firstName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"lastName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    name=\"email\"\r\n                    fullWidth\r\n                    required\r\n                    component={TextField}\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    label=\"Employed\"\r\n                    control={\r\n                      <Field\r\n                        name=\"employed\"\r\n                        component={Checkbox}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Best Stooge</FormLabel>\r\n                    <RadioGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Larry\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"larry\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Moe\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"moe\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Curly\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"curly\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Sauces</FormLabel>\r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Ketchup\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"ketchup\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Mustard\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"mustard\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Salsa\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"salsa\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Guacamole 🥑\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"guacamole\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"notes\"\r\n                    component={TextField}\r\n                    multiline\r\n                    label=\"Notes\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    component={Select}\r\n                    label=\"Select a City\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"London\">London</MenuItem>\r\n                    <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      A city with a very long Name\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"rendez-vous\"\r\n                      component={DatePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Rendez-vous\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"alarm\"\r\n                      component={TimePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Alarm\"\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":17,"column":21,"nodeType":"105","messageId":"106","endLine":17,"endColumn":31},{"ruleId":"103","severity":1,"message":"110","line":23,"column":18,"nodeType":"105","messageId":"106","endLine":23,"endColumn":25},{"ruleId":"103","severity":1,"message":"111","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"112","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":17},{"ruleId":"103","severity":1,"message":"113","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"103","severity":1,"message":"114","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":25},{"ruleId":"103","severity":1,"message":"115","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"116","line":16,"column":8,"nodeType":"105","messageId":"106","endLine":16,"endColumn":20},{"ruleId":"103","severity":1,"message":"117","line":17,"column":8,"nodeType":"105","messageId":"106","endLine":17,"endColumn":16},{"ruleId":"103","severity":1,"message":"118","line":18,"column":8,"nodeType":"105","messageId":"106","endLine":18,"endColumn":12},{"ruleId":"103","severity":1,"message":"119","line":19,"column":8,"nodeType":"105","messageId":"106","endLine":19,"endColumn":15},{"ruleId":"103","severity":1,"message":"120","line":20,"column":8,"nodeType":"105","messageId":"106","endLine":20,"endColumn":14},{"ruleId":"103","severity":1,"message":"121","line":21,"column":8,"nodeType":"105","messageId":"106","endLine":21,"endColumn":15},{"ruleId":"103","severity":1,"message":"122","line":22,"column":8,"nodeType":"105","messageId":"106","endLine":22,"endColumn":18},{"ruleId":"103","severity":1,"message":"123","line":33,"column":7,"nodeType":"105","messageId":"106","endLine":33,"endColumn":17},{"ruleId":"103","severity":1,"message":"124","line":38,"column":9,"nodeType":"105","messageId":"106","endLine":38,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"125","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":22},{"ruleId":"103","severity":1,"message":"126","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":12},{"ruleId":"103","severity":1,"message":"127","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":21},{"ruleId":"103","severity":1,"message":"128","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":11},{"ruleId":"103","severity":1,"message":"129","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":18},{"ruleId":"103","severity":1,"message":"130","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":22},{"ruleId":"103","severity":1,"message":"131","line":14,"column":3,"nodeType":"105","messageId":"106","endLine":14,"endColumn":7},{"ruleId":"103","severity":1,"message":"132","line":30,"column":3,"nodeType":"105","messageId":"106","endLine":30,"endColumn":13},{"ruleId":"103","severity":1,"message":"133","line":31,"column":3,"nodeType":"105","messageId":"106","endLine":31,"endColumn":13},{"ruleId":"103","severity":1,"message":"134","line":32,"column":3,"nodeType":"105","messageId":"106","endLine":32,"endColumn":21},{"ruleId":"103","severity":1,"message":"135","line":38,"column":7,"nodeType":"105","messageId":"106","endLine":38,"endColumn":19},{"ruleId":"103","severity":1,"message":"136","line":120,"column":10,"nodeType":"105","messageId":"106","endLine":120,"endColumn":15},{"ruleId":"103","severity":1,"message":"137","line":120,"column":17,"nodeType":"105","messageId":"106","endLine":120,"endColumn":25},{"ruleId":"103","severity":1,"message":"138","line":157,"column":13,"nodeType":"105","messageId":"106","endLine":157,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":178,"column":13,"nodeType":"141","messageId":"142","endLine":178,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":199,"column":96,"nodeType":"145","endLine":199,"endColumn":106},{"ruleId":"143","severity":1,"message":"144","line":230,"column":13,"nodeType":"145","endLine":230,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":361,"column":29,"nodeType":"145","endLine":361,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":576,"column":59,"nodeType":"145","endLine":576,"endColumn":77},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"146","line":4,"column":20,"nodeType":"105","messageId":"106","endLine":4,"endColumn":25},{"ruleId":"103","severity":1,"message":"131","line":8,"column":3,"nodeType":"105","messageId":"106","endLine":8,"endColumn":7},{"ruleId":"103","severity":1,"message":"147","line":12,"column":3,"nodeType":"105","messageId":"106","endLine":12,"endColumn":13},{"ruleId":"103","severity":1,"message":"135","line":29,"column":7,"nodeType":"105","messageId":"106","endLine":29,"endColumn":19},{"ruleId":"103","severity":1,"message":"148","line":44,"column":10,"nodeType":"105","messageId":"106","endLine":44,"endColumn":27},{"ruleId":"103","severity":1,"message":"149","line":67,"column":10,"nodeType":"105","messageId":"106","endLine":67,"endColumn":27},{"ruleId":"103","severity":1,"message":"124","line":110,"column":9,"nodeType":"105","messageId":"106","endLine":110,"endColumn":16},{"ruleId":"103","severity":1,"message":"136","line":111,"column":10,"nodeType":"105","messageId":"106","endLine":111,"endColumn":15},{"ruleId":"103","severity":1,"message":"137","line":111,"column":17,"nodeType":"105","messageId":"106","endLine":111,"endColumn":25},{"ruleId":"103","severity":1,"message":"150","line":125,"column":9,"nodeType":"105","messageId":"106","endLine":125,"endColumn":32},{"ruleId":"103","severity":1,"message":"151","line":129,"column":9,"nodeType":"105","messageId":"106","endLine":129,"endColumn":32},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"131","line":8,"column":3,"nodeType":"105","messageId":"106","endLine":8,"endColumn":7},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Dialog' is defined but never used.","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Transition' is assigned a value but never used.","'classes' is assigned a value but never used.","'FormHelperText' is defined but never used.","'clsx' is defined but never used.","'OutlinedInput' is defined but never used.","'Box' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'Link' is defined but never used.","'TimePicker' is defined but never used.","'DatePicker' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'defaultProps' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setErr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'DatePickerWrapper' is defined but never used.","'TimePickerWrapper' is defined but never used.","'handleClickShowPassword' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]