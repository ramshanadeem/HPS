[{"E:\\ramsha\\HPS\\client\\src\\index.js":"1","E:\\ramsha\\HPS\\client\\src\\reportWebVitals.js":"2","E:\\ramsha\\HPS\\client\\src\\App.js":"3","E:\\ramsha\\HPS\\client\\src\\components\\list\\List.js":"4","E:\\ramsha\\HPS\\client\\src\\components\\Dialog.js":"5","E:\\ramsha\\HPS\\client\\src\\components\\Stepper.js":"6","E:\\ramsha\\HPS\\client\\src\\components\\welfare\\Welfare.js":"7","E:\\ramsha\\HPS\\client\\src\\components\\register\\Register.js":"8","E:\\ramsha\\HPS\\client\\src\\components\\service\\Service.js":"9","E:\\ramsha\\HPS\\client\\src\\components\\GlobalHeader.js":"10","E:\\ramsha\\HPS\\client\\src\\components\\welfare\\Materialtable.js":"11","E:\\ramsha\\HPS\\client\\src\\components\\Icons\\Icons.js":"12"},{"size":517,"mtime":1614573465539,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1614573465539,"results":"15","hashOfConfig":"14"},{"size":216,"mtime":1614576935241,"results":"16","hashOfConfig":"14"},{"size":4031,"mtime":1615272655410,"results":"17","hashOfConfig":"14"},{"size":1587,"mtime":1615272047398,"results":"18","hashOfConfig":"14"},{"size":4713,"mtime":1614836668588,"results":"19","hashOfConfig":"14"},{"size":22884,"mtime":1615273902751,"results":"20","hashOfConfig":"14"},{"size":21705,"mtime":1614843216243,"results":"21","hashOfConfig":"14"},{"size":9723,"mtime":1614841051153,"results":"22","hashOfConfig":"14"},{"size":2141,"mtime":1614834977492,"results":"23","hashOfConfig":"14"},{"size":1996,"mtime":1615272422378,"results":"24","hashOfConfig":"14"},{"size":2206,"mtime":1615271906477,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vubvjo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\ramsha\\HPS\\client\\src\\index.js",[],["57","58"],"E:\\ramsha\\HPS\\client\\src\\reportWebVitals.js",[],"E:\\ramsha\\HPS\\client\\src\\App.js",["59"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\ramsha\\HPS\\client\\src\\components\\list\\List.js",["60","61","62","63"],"E:\\ramsha\\HPS\\client\\src\\components\\Dialog.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HorizontalLinearStepper from './Stepper';\r\n\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slide from '@material-ui/core/Slide';\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FormDialog({ open, onClose }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <HorizontalLinearStepper />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n\r\n  );\r\n}","E:\\ramsha\\HPS\\client\\src\\components\\Stepper.js",["78","79","80"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Register from './register/Register';\r\nimport Services from './service/Service';\r\nimport Welfare from './welfare/Welfare';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Registeration', 'Welfare', 'Services'];\r\n}\r\n\r\nfunction getStepContent(step, handleNext, handleBack) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Register next={handleNext} back={handleBack} />;\r\n    case 1:\r\n      return <Welfare next={handleNext} back={handleBack} />;\r\n    case 2:\r\n      return <Services next={handleNext} back={handleBack} />;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper({ handleClose }) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (activeStep == 2) {\r\n      handleClose()\r\n    }\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (activeStep == 0) {\r\n      handleClose()\r\n    } else {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <Typography className={classes.instructions}>{getStepContent(activeStep, handleNext, handleBack)}</Typography>\r\n              <div>\r\n                {/* <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                  Back\r\n              </Button> \r\n                {isStepOptional(activeStep) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleSkip}\r\n                    className={classes.button}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                )}*/}\r\n\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNext}\r\n                  className={classes.button}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","E:\\ramsha\\HPS\\client\\src\\components\\welfare\\Welfare.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"E:\\ramsha\\HPS\\client\\src\\components\\register\\Register.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport clsx from 'clsx';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport GlobalHeader from '../GlobalHeader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst defaultProps = {\r\n  bgcolor: 'background.paper',\r\n  m: 1,\r\n  style: { width: '5rem', height: '5rem' },\r\n  borderColor: 'text.primary',\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Register({ next, back }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n  const [options, setOptions] = useState(false)\r\n  const [disableHelpType, setdisableHelpType] = React.useState(false)\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!value.TokenNo) {\r\n      errors.TokenNo = 'Required';\r\n    }\r\n    if (!value.lastName) {\r\n      errors.lastName = 'Required';\r\n    }\r\n    if (!value.email) {\r\n      errors.email = 'Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const handlereligion = (val) => {\r\n    if (val != \"Islam\") {\r\n      setdisableHelpType(true)\r\n\r\n\r\n    }\r\n    else {\r\n      setdisableHelpType(false)\r\n    }\r\n  }\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n  const [Header, setHeader] = useState({\r\n    MRNo: \"\",\r\n    TokenNo: \"\",\r\n    RegistrationDate: new Date(),\r\n    Name: \"\",\r\n    FatherOrHusband: \"\",\r\n    DOB: new Date(),\r\n    Age: \"\",\r\n    Gender: \"\",\r\n    Religion: \"\",\r\n    District: \"\",\r\n    City: \"\",\r\n    Area: \"\",\r\n    HousNo: \"\",\r\n    Address: \"\",\r\n    CNIC: \"\",\r\n    Phone: \"\",\r\n    OffPhone: \"\",\r\n    Mobile: \"\",\r\n    RefBy: \"\",\r\n    Remarks: \"\",\r\n    IsRejected: false,\r\n    IsZakat: false,\r\n    IsPAFEmp: false,\r\n    MonthlyConsLimit: 0,\r\n    ThumbImage: \"\",\r\n    NOY: \"\",\r\n    EmpID: \"\",\r\n    IsStaff: false,\r\n    CreateUser: \"\",\r\n    ModifyUser: \"\",\r\n    CreateDate: \"\",\r\n    ModifyDate: \"\"\r\n  });\r\n  /*   const [valid, setvalid] = useState()\r\n    const validateI = (valid) => {\r\n      if (valid != TokenNo) {\r\n        setvalid(console.log(\"er\"))\r\n      }\r\n      else {\r\n        setvalid(\"true\")\r\n      }\r\n    } */\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    //validate();\r\n    e.preventDefault();\r\n    setHeader(e.target.value);\r\n    //  validateI();\r\n    //console.log(\"not\" + err)\r\n    console.log(Header);\r\n    next();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const handleOption = (val) => {\r\n    if (val != 'islam') {\r\n      setOptions(true)\r\n    }\r\n    else {\r\n      setOptions(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /*   const handleChange = (event) => {\r\n      setValue(event.target.value);\r\n    }; */\r\n  return (\r\n    <>\r\n      <GlobalHeader forward={handleSubmit} back={back} title=\"Registeration\" />\r\n      <div style={{ padding: 16, margin: 'auto' }}>\r\n\r\n        <CssBaseline />\r\n        <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n          🏁 Registeration\r\n      </Typography>\r\n\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          initialValues={{ employed: true, stooge: 'larry' }}\r\n          validate={validate}\r\n          render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" noValidate>\r\n              <Paper style={{ padding: 16 }}>\r\n                <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      fullWidth\r\n                      disabled\r\n                      id=\"filled-disabled\"\r\n                      required\r\n                      name=\"MR NO\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"MR NO\"\r\n                      variant=\"outlined\"\r\n\r\n                    />\r\n                  </Grid>\r\n\r\n\r\n\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"Token No\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"Token No\"\r\n                      variant=\"outlined\"\r\n                      value={Header.TokenNo}\r\n                      //onClick={(e) => valid({ TokenNo: e.target.value })}\r\n                      onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n\r\n                      label=\"TokenNo\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" item xs={3}>\r\n\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"outlined\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        value={Header.RegistrationDate}\r\n                        label=\"Registration Date\"\r\n                        //value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      name=\"name\"\r\n                      value={Header.Name}\r\n                      fullWidth\r\n                      required\r\n                      component={TextField}\r\n                      type=\"name\"\r\n                      onChange={(e) => setHeader({ ...Header, Name: e.target.value })}\r\n                      label=\"name\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      name=\"FNAME\"\r\n                      value={Header.FatherOrHusband}\r\n                      onChange={(e) => setHeader({ ...Header, FatherOrHusband: e.target.value })}\r\n                      fullWidth\r\n                      required\r\n                      component={TextField}\r\n                      type=\"FNAME\"\r\n                      label=\"FNAME\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\" item xs={3}>\r\n\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"outlined\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n\r\n                        label=\"Date of Birth\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                  <Grid>\r\n\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      name=\"Age\"\r\n                      fullWidth\r\n                      required\r\n                      component={TextField}\r\n                      type=\"number\"\r\n                      label=\"Age\"\r\n                      variant=\"outlined\"\r\n                      value={Header.Age}\r\n                      onChange={(e) => setHeader({ ...Header, Age: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"Gender\"\r\n                      component={Select}\r\n                      label=\"Gender\"\r\n                      variant=\"outlined\"\r\n                      formControlProps={{ fullWidth: true }}\r\n                      value={Header.Gender}\r\n                      onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"male\">male</MenuItem>\r\n                      <MenuItem value=\"female\">Female</MenuItem>\r\n                      <MenuItem value=\"Budapest\">\r\n                        other\r\n                    </MenuItem>\r\n                    </Field>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"Religion\"\r\n                      component={Select}\r\n                      label=\"Religion\"\r\n                      variant=\"outlined\"\r\n                      value={Header.Religion}\r\n                      formControlProps={{ fullWidth: true }}\r\n\r\n                      onClick={(e) => handlereligion(e.target.value)}\r\n                      onChange={(e) => {\r\n                        // handleOption(e.target.value)\r\n                        setHeader({ ...Header, Religion: e.target.value })\r\n                      }\r\n\r\n                      }\r\n                      disabled={options}\r\n                    >\r\n                      <MenuItem value=\"male\">Islam</MenuItem>\r\n                      <MenuItem value=\"female\">Other</MenuItem>\r\n\r\n                    </Field>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">Help Type</FormLabel>\r\n                      <RadioGroup row>\r\n                        <FormControlLabel\r\n                          label=\"Zakat\"\r\n                          control={\r\n                            <Field\r\n                              name=\"help\"\r\n                              component={Radio}\r\n                              type=\"radio\"\r\n                              value=\"help1\"\r\n                              value={Header.IsZakat}\r\n                              disabled={disableHelpType}\r\n                              onChange={(e) => setHeader({ ...Header, IsZakat: e.target.value })}\r\n                            />\r\n\r\n                          }\r\n\r\n                        />\r\n                        <FormControlLabel\r\n                          label=\"Welfare\"\r\n                          control={\r\n                            <Field\r\n                              name=\"help\"\r\n                              component={Radio}\r\n                              type=\"radio\"\r\n                              value=\"help\"\r\n                              value={Header.IsRejected}\r\n                              onChange={(e) => setHeader({ ...Header, IsRejected: e.target.value })}\r\n                            />\r\n                          }\r\n                        />\r\n\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"Token No\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"CNIC\"\r\n                      variant=\"outlined\"\r\n                      value={Header.CNIC}\r\n                      onChange={(e) => setHeader({ ...Header, CNIC: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item xs={12}>\r\n\r\n                    <Typography>\r\n                      <h4 style={{ display: 'flex', justifyContent: 'center' }}>CONATCT</h4>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n                    required\r\n                    name=\"House No\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"House No\"\r\n                    variant=\"outlined\"\r\n                    value={Header.HousNo}\r\n                    onChange={(e) => setHeader({ ...Header, HousNo: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"address\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    value={Header.Address}\r\n                    onChange={(e) => setHeader({ ...Header, Address: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"Area\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Area\"\r\n                    variant=\"outlined\"\r\n                    value={Header.Area}\r\n                    onChange={(e) => setHeader({ ...Header, Area: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"District\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"District\"\r\n                    variant=\"outlined\"\r\n                    value={Header.District}\r\n                    onChange={(e) => setHeader({ ...Header, District: e.target.value })}\r\n                  /></Grid>\r\n\r\n\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"City\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                    value={Header.City}\r\n                    onChange={(e) => setHeader({ ...Header, City: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"Phone(res)\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Phone(res)\"\r\n                    variant=\"outlined\"\r\n                    value={Header.Phone}\r\n                    onChange={(e) => setHeader({ ...Header, Phone: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"Phone(Off)\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Phone(Off)\"\r\n                    variant=\"outlined\"\r\n                    value={Header.OffPhone}\r\n                    onChange={(e) => setHeader({ ...Header, OffPhone: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"Mobile\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Mobile\"\r\n                    variant=\"outlined\"\r\n                    value={Header.Mobile}\r\n                    onChange={(e) => setHeader({ ...Header, Mobile: e.target.value })}\r\n                  /></Grid>\r\n                  <TextField\r\n                    id=\"outlined-uncontrolled\"\r\n                    label=\"Monthly Consumtion Unit\"\r\n                    defaultValue=\"0\"\r\n                    variant=\"outlined\"\r\n                    value={Header.MonthlyConsLimit}\r\n                    onChange={(e) => setHeader({ ...Header, MonthlyConsLimit: e.target.value })}\r\n                  />\r\n\r\n\r\n                  <Grid item xs={12}>\r\n\r\n                    <Typography>\r\n                      <h4 style={{ display: 'flex', justifyContent: 'center' }}>Reffer Info</h4>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n                    required\r\n                    name=\"Refer By\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Refer By\"\r\n                    variant=\"outlined\"\r\n                    value={Header.RefBy}\r\n                    onChange={(e) => setHeader({ ...Header, RefBy: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"Employee Id\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Employee Id\"\r\n                    variant=\"outlined\"\r\n                    value={Header.IsPAFEmp}\r\n                    onChange={(e) => setHeader({ ...Header, IsPAFEmp: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={3} > <Field\r\n\r\n\r\n                    name=\"NDY\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"NDY\"\r\n                    variant=\"outlined\"\r\n                    value={Header.NDY}\r\n                    onChange={(e) => setHeader({ ...Header, NDY: e.target.value })}\r\n                  /></Grid>\r\n                  <Grid item xs={5} > <Field\r\n\r\n\r\n                    name=\"Remark\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Remark\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setHeader({ ...Header, Remarks: e.target.value })}\r\n                    value={Header.Remark}\r\n                  /></Grid>\r\n                  <Grid item xs={12}>\r\n\r\n                    <Typography>\r\n                      <h4 style={{ display: 'flex', justifyContent: 'center' }}>Staff</h4>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\"></FormLabel>\r\n                      <FormGroup row>\r\n                        <Grid >\r\n                          <FormControlLabel\r\n                            label=\"IS PAF EMPLOYEE\"\r\n                            control={\r\n                              <Field\r\n                                name=\"IS PAF EMPLOYEE\"\r\n                                component={Checkbox}\r\n                                type=\"checkbox\"\r\n                                value={Header.IsPAFEmp}\r\n                                onChange={(e) => setHeader({ ...Header, IsPAFEmp: e.target.value })}\r\n\r\n                              />\r\n\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                        <Grid >\r\n                          <FormControlLabel\r\n                            label=\"IS STAFF\"\r\n                            control={\r\n                              <Field\r\n                                name=\"IS STAFF\"\r\n                                component={Checkbox}\r\n                                type=\"checkbox\"\r\n                                value={Header.IsStaff}\r\n                                onChange={(e) => setHeader({ ...Header, IsStaff: e.target.value })}\r\n                                //onChange={e => setHeader({ ...Header, IsStaff: !Header.IsStaff })}\r\n                                label=\"Is Staff\"\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                        <Grid>\r\n                          <FormControlLabel\r\n                            label=\"Is Rejected\"\r\n                            control={\r\n                              <Field\r\n                                name=\"IsRejected\"\r\n                                component={Checkbox}\r\n                                type=\"checkbox\"\r\n                                value=\"IsRejected\"\r\n                                checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n\r\n                                onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })}\r\n\r\n\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid>\r\n\r\n\r\n\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item style={{ marginTop: '16%' }}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                      onClick={reset}\r\n                      disabled={submitting || pristine}\r\n                    >\r\n                      Reset\r\n                  </Button>\r\n                  </Grid>\r\n                  {/* <Grid item style={{ marginTop: '16%' }}>\r\n\r\n                    <Button variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={submitting} >submit</Button>\r\n\r\n                  </Grid> */}\r\n                </Grid>\r\n              </Paper>\r\n              <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n            </form>\r\n\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","E:\\ramsha\\HPS\\client\\src\\components\\service\\Service.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useState } from 'react';\r\n/* import ReactDOM from 'react-dom'; */\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport GlobalHeader from '../GlobalHeader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst defaultProps = {\r\n  bgcolor: 'background.paper',\r\n  m: 1,\r\n  style: { width: '5rem', height: '5rem' },\r\n  borderColor: 'text.primary',\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction DatePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <DatePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TimePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <TimePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\n/* const onSubmit = async values => {\r\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n}; */\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function Services({ next, back }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const [Header, setHeader] = useState({\r\n    TokenNo: \"\",\r\n    ServiceDate: new Date(),\r\n    MRNo: 'recID',\r\n    Ward: \"\",\r\n    Amount: \"\",\r\n    TotalAmount: \"\",\r\n    PatientContribution: \"\",\r\n    Remarks: \"\",\r\n    CreatedUser: \"Admin\",\r\n    ModifyUser: \"Admin\"\r\n  })\r\n  const handleSubmit = (e) => {\r\n    //validate();\r\n    e.preventDefault();\r\n    setHeader(e.target.value);\r\n    console.log(err)\r\n    console.log(Header);\r\n    next();\r\n  }\r\n  const [err, setErr] = useState('')\r\n\r\n\r\n  /*   const handleChange = (prop) => (event) => {\r\n      setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n   */\r\n  /*   const handleClickShowPassword = () => {\r\n      setValues({ ...values, showPassword: !values.showPassword });\r\n    }; */\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto' }}>\r\n      <GlobalHeader onSubmit={handleSubmit} back={back} title=\"Services\" />\r\n\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        🏁 Services\r\n      </Typography>\r\n      <Form\r\n        onSubmit={handleSubmit}\r\n        initialValues={{ employed: true, stooge: 'larry' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={2}>\r\n                  <TextField\r\n                    id=\"outlined-uncontrolled\"\r\n                    label=\"MR#\"\r\n                    defaultValue=\"0\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"Token No\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Token No\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"Gender\"\r\n                    component={Select}\r\n                    label=\"Gender\"\r\n                    variant=\"outlined\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                    value={Header.Gender}\r\n                    onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"male\">male</MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      other\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\" item xs={3}>\r\n\r\n                    <KeyboardDatePicker\r\n                      disableToolbar\r\n                      variant=\"outlined\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-inline\"\r\n\r\n                      label=\"WelfareDate\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"WARD\"\r\n                    component={Select}\r\n                    label=\"Ward\"\r\n                    variant=\"outlined\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                    value={Header.Gender}\r\n                    onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"1\">shift1</MenuItem>\r\n                    <MenuItem value=\"2\">shift2</MenuItem>\r\n                    <MenuItem value=\"3\">\r\n                      shift3\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"Amount\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Amount\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"TotalAmount\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Total Amount\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Patient Contribution\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Patient Contribution\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Field\r\n                    fullWidth\r\n\r\n                    name=\"Remark\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Remark\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <h4>Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div style={{ display: \"inline\" }}><h4>TABLE BANYGA AB</h4></div>\r\n                </Grid>\r\n\r\n\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","E:\\ramsha\\HPS\\client\\src\\components\\GlobalHeader.js",["140"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IoMdArrowRoundBack } from 'react-icons/io'\r\nimport { IoMdArrowRoundForward } from 'react-icons/io'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n}));\r\n\r\nexport default function GlobalHeader({ forward, back, title }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        <IoMdArrowRoundBack onClick={back} />\r\n                    </IconButton>\r\n                    <div style={{ textAlign: 'center', marginLeft: '45%' }}>\r\n                        <Typography className={classes.title} variant=\"h6\">\r\n                            {title}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <IoMdArrowRoundForward onClick={forward} />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","E:\\ramsha\\HPS\\client\\src\\components\\welfare\\Materialtable.js",["141"],"E:\\ramsha\\HPS\\client\\src\\components\\Icons\\Icons.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"151","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":16},{"ruleId":"146","severity":1,"message":"152","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"153","line":18,"column":21,"nodeType":"148","messageId":"149","endLine":18,"endColumn":31},{"ruleId":"146","severity":1,"message":"154","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"156","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":21},{"ruleId":"146","severity":1,"message":"157","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":25},{"ruleId":"146","severity":1,"message":"158","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":19},{"ruleId":"146","severity":1,"message":"159","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"160","line":17,"column":8,"nodeType":"148","messageId":"149","endLine":17,"endColumn":16},{"ruleId":"146","severity":1,"message":"161","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":12},{"ruleId":"146","severity":1,"message":"162","line":19,"column":8,"nodeType":"148","messageId":"149","endLine":19,"endColumn":15},{"ruleId":"146","severity":1,"message":"163","line":20,"column":8,"nodeType":"148","messageId":"149","endLine":20,"endColumn":14},{"ruleId":"146","severity":1,"message":"164","line":21,"column":8,"nodeType":"148","messageId":"149","endLine":21,"endColumn":15},{"ruleId":"146","severity":1,"message":"165","line":22,"column":8,"nodeType":"148","messageId":"149","endLine":22,"endColumn":18},{"ruleId":"146","severity":1,"message":"166","line":33,"column":7,"nodeType":"148","messageId":"149","endLine":33,"endColumn":17},{"ruleId":"146","severity":1,"message":"167","line":38,"column":9,"nodeType":"148","messageId":"149","endLine":38,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":58,"column":20,"nodeType":"170","messageId":"171","endLine":58,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":71,"column":20,"nodeType":"170","messageId":"171","endLine":71,"endColumn":22},{"ruleId":"146","severity":1,"message":"172","line":78,"column":9,"nodeType":"148","messageId":"149","endLine":78,"endColumn":19},{"ruleId":"146","severity":1,"message":"173","line":4,"column":20,"nodeType":"148","messageId":"149","endLine":4,"endColumn":25},{"ruleId":"146","severity":1,"message":"152","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},{"ruleId":"146","severity":1,"message":"174","line":9,"column":3,"nodeType":"148","messageId":"149","endLine":9,"endColumn":7},{"ruleId":"146","severity":1,"message":"175","line":13,"column":3,"nodeType":"148","messageId":"149","endLine":13,"endColumn":13},{"ruleId":"146","severity":1,"message":"176","line":32,"column":7,"nodeType":"148","messageId":"149","endLine":32,"endColumn":19},{"ruleId":"146","severity":1,"message":"177","line":47,"column":10,"nodeType":"148","messageId":"149","endLine":47,"endColumn":27},{"ruleId":"146","severity":1,"message":"178","line":70,"column":10,"nodeType":"148","messageId":"149","endLine":70,"endColumn":27},{"ruleId":"146","severity":1,"message":"167","line":115,"column":9,"nodeType":"148","messageId":"149","endLine":115,"endColumn":16},{"ruleId":"146","severity":1,"message":"179","line":116,"column":10,"nodeType":"148","messageId":"149","endLine":116,"endColumn":15},{"ruleId":"146","severity":1,"message":"180","line":116,"column":17,"nodeType":"148","messageId":"149","endLine":116,"endColumn":25},{"ruleId":"146","severity":1,"message":"181","line":157,"column":15,"nodeType":"148","messageId":"149","endLine":157,"endColumn":21},{"ruleId":"146","severity":1,"message":"182","line":164,"column":9,"nodeType":"148","messageId":"149","endLine":164,"endColumn":32},{"ruleId":"146","severity":1,"message":"183","line":171,"column":17,"nodeType":"148","messageId":"149","endLine":171,"endColumn":25},{"ruleId":"146","severity":1,"message":"184","line":184,"column":10,"nodeType":"148","messageId":"149","endLine":184,"endColumn":17},{"ruleId":"146","severity":1,"message":"185","line":184,"column":19,"nodeType":"148","messageId":"149","endLine":184,"endColumn":29},{"ruleId":"146","severity":1,"message":"186","line":212,"column":9,"nodeType":"148","messageId":"149","endLine":212,"endColumn":15},{"ruleId":"146","severity":1,"message":"187","line":243,"column":9,"nodeType":"148","messageId":"149","endLine":243,"endColumn":24},{"ruleId":"146","severity":1,"message":"188","line":250,"column":9,"nodeType":"148","messageId":"149","endLine":250,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":601,"column":31,"nodeType":"191","endLine":601,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":618,"column":31,"nodeType":"191","endLine":618,"endColumn":53},{"ruleId":"189","severity":1,"message":"190","line":633,"column":31,"nodeType":"191","endLine":633,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":648,"column":31,"nodeType":"191","endLine":648,"endColumn":54},{"ruleId":"146","severity":1,"message":"150","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"192","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":22},{"ruleId":"146","severity":1,"message":"193","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":12},{"ruleId":"146","severity":1,"message":"194","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":21},{"ruleId":"146","severity":1,"message":"195","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":11},{"ruleId":"146","severity":1,"message":"196","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":18},{"ruleId":"146","severity":1,"message":"197","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":22},{"ruleId":"146","severity":1,"message":"174","line":14,"column":3,"nodeType":"148","messageId":"149","endLine":14,"endColumn":7},{"ruleId":"146","severity":1,"message":"198","line":30,"column":3,"nodeType":"148","messageId":"149","endLine":30,"endColumn":13},{"ruleId":"146","severity":1,"message":"199","line":31,"column":3,"nodeType":"148","messageId":"149","endLine":31,"endColumn":13},{"ruleId":"146","severity":1,"message":"200","line":32,"column":3,"nodeType":"148","messageId":"149","endLine":32,"endColumn":21},{"ruleId":"146","severity":1,"message":"176","line":38,"column":7,"nodeType":"148","messageId":"149","endLine":38,"endColumn":19},{"ruleId":"146","severity":1,"message":"180","line":58,"column":17,"nodeType":"148","messageId":"149","endLine":58,"endColumn":25},{"ruleId":"168","severity":1,"message":"201","line":75,"column":13,"nodeType":"170","messageId":"171","endLine":75,"endColumn":15},{"ruleId":"146","severity":1,"message":"202","line":148,"column":9,"nodeType":"148","messageId":"149","endLine":148,"endColumn":21},{"ruleId":"168","severity":1,"message":"201","line":149,"column":13,"nodeType":"170","messageId":"171","endLine":149,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":177,"column":74,"nodeType":"191","endLine":177,"endColumn":84},{"ruleId":"189","severity":1,"message":"190","line":210,"column":23,"nodeType":"191","endLine":210,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":353,"column":31,"nodeType":"191","endLine":353,"endColumn":53},{"ruleId":"189","severity":1,"message":"190","line":369,"column":31,"nodeType":"191","endLine":369,"endColumn":56},{"ruleId":"189","severity":1,"message":"190","line":600,"column":61,"nodeType":"191","endLine":600,"endColumn":79},{"ruleId":"146","severity":1,"message":"203","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":18},{"ruleId":"146","severity":1,"message":"173","line":4,"column":20,"nodeType":"148","messageId":"149","endLine":4,"endColumn":25},{"ruleId":"146","severity":1,"message":"174","line":8,"column":3,"nodeType":"148","messageId":"149","endLine":8,"endColumn":7},{"ruleId":"146","severity":1,"message":"175","line":12,"column":3,"nodeType":"148","messageId":"149","endLine":12,"endColumn":13},{"ruleId":"146","severity":1,"message":"204","line":13,"column":3,"nodeType":"148","messageId":"149","endLine":13,"endColumn":12},{"ruleId":"146","severity":1,"message":"205","line":15,"column":3,"nodeType":"148","messageId":"149","endLine":15,"endColumn":12},{"ruleId":"146","severity":1,"message":"206","line":16,"column":3,"nodeType":"148","messageId":"149","endLine":16,"endColumn":14},{"ruleId":"146","severity":1,"message":"207","line":17,"column":3,"nodeType":"148","messageId":"149","endLine":17,"endColumn":19},{"ruleId":"146","severity":1,"message":"176","line":30,"column":7,"nodeType":"148","messageId":"149","endLine":30,"endColumn":19},{"ruleId":"146","severity":1,"message":"177","line":45,"column":10,"nodeType":"148","messageId":"149","endLine":45,"endColumn":27},{"ruleId":"146","severity":1,"message":"178","line":68,"column":10,"nodeType":"148","messageId":"149","endLine":68,"endColumn":27},{"ruleId":"146","severity":1,"message":"167","line":113,"column":9,"nodeType":"148","messageId":"149","endLine":113,"endColumn":16},{"ruleId":"146","severity":1,"message":"179","line":114,"column":10,"nodeType":"148","messageId":"149","endLine":114,"endColumn":15},{"ruleId":"146","severity":1,"message":"180","line":114,"column":17,"nodeType":"148","messageId":"149","endLine":114,"endColumn":25},{"ruleId":"146","severity":1,"message":"181","line":137,"column":15,"nodeType":"148","messageId":"149","endLine":137,"endColumn":21},{"ruleId":"146","severity":1,"message":"182","line":148,"column":9,"nodeType":"148","messageId":"149","endLine":148,"endColumn":32},{"ruleId":"146","severity":1,"message":"208","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"153","line":6,"column":21,"nodeType":"148","messageId":"149","endLine":6,"endColumn":31},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Dialog' is defined but never used.","'tableIcons' is defined but never used.","'setColumns' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Transition' is assigned a value but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleSkip' is assigned a value but never used.","'Radio' is defined but never used.","'Link' is defined but never used.","'RadioGroup' is defined but never used.","'defaultProps' is assigned a value but never used.","'DatePickerWrapper' is defined but never used.","'TimePickerWrapper' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setErr' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","'setrecID' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'AddRow' is assigned a value but never used.","'updateTableData' is assigned a value but never used.","'onClickDelete' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormHelperText' is defined but never used.","'clsx' is defined but never used.","'OutlinedInput' is defined but never used.","'Box' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'TimePicker' is defined but never used.","'DatePicker' is defined but never used.","'KeyboardTimePicker' is defined but never used.","Expected '!==' and instead saw '!='.","'handleOption' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'fade' is defined but never used.","no-global-assign","no-unsafe-negation"]